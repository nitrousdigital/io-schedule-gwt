<?xml version="1.0" encoding="utf-8" ?>
<project name="IOSchedGWT" default="build" basedir=".">
	<property file="build.properties" />
	
    <!-- The path to the deployment directory where the war file will be copied by the deploy target -->
    <property name="catalina.home" value="${env.CATALINA_HOME}"/>
	
    <!-- The path to the deployment directory where the war file will be copied by the deploy target -->
    <property name="webapps.dir" value="${catalina.home}/webapps"/>
	
	<!-- Arguments to gwtc and devmode targets -->
	<property name="gwt.args" value="-style PRETTY" />

	<!-- Configure path to GWT SDK -->
	<property name="gwt.sdk" location="D:/gwt/gwt-2.3.0" />

	<path id="project.class.path">
		<pathelement location="build/classes" />
		<pathelement location="${gwt.sdk}/gwt-user.jar" />
		<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
	    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
	</path>

	<target name="libs" description="Copy libs to WEB-INF/lib">
		<!--
		<mkdir dir="war/WEB-INF/lib" />
		<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
		<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
		-->
		<!-- Add any additional server libs that need to be copied -->
	</target>

	<target name="javac" depends="libs" description="Compile java source to bytecode">
		<mkdir dir="build/classes" />
		<javac srcdir="src" includes="**" encoding="utf-8" destdir="build/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="build/classes">
			<fileset dir="src" excludes="**/*.java" />
		</copy>
	</target>

	<target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="src" />
				<path refid="project.class.path" />
		        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
		        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx256M" />
			<arg line="-war" />
			<arg value="war" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg line="${gwt.args}" />
			<arg value="com.nitrous.iosched.IOSchedGWT" />
		</java>
	</target>

	<target name="devmode" depends="javac" description="Run development mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
			<classpath>
				<pathelement location="src" />
				<path refid="project.class.path" />
                <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
                <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
			</classpath>
			<jvmarg value="-Xmx256M" />
			<arg value="-startupUrl" />
			<arg value="IOSchedGWT.html" />
			<arg line="-war" />
			<arg value="war" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg line="${gwt.args}" />
			<arg value="com.nitrous.iosched.IOSchedGWT" />
		</java>
	</target>

	<target name="build" depends="gwtc" description="Build this project" />

	<target name="war" depends="build" description="Create a war file">
		<zip destfile="build/IOSchedGWT.war" basedir="war" />
	</target>
	
	<target name="copy-js" description="Re-deploy the javascript and static HTML resources (without re-compiling)">
		<copy todir="${webapps.dir}/IOSchedGWT">
			<fileset dir="war">
				<exclude name="**/.svn/**"/> 
				<exclude name="WEB-INF/**"/> 
			</fileset>
		</copy>
	</target>
	<target name="deploy-js" depends="build, copy-js" description="Build and re-deploy ONLY the GWT compiled JavaScript and static resources">
	</target>
	
	<target name="zip" depends="build" description="Create a zip file of the ajax web page">
		<zip destfile="build/IOSchedGWT.zip" basedir="war">
			<exclude name="WEB-INF/**/*" />			
			<exclude name="WEB-INF" />			
		</zip>
	</target>

	<target name="deploy-war" depends="war" description="Build and deploy the war file">
        <copy todir="${webapps.dir}" file="build/IOSchedGWT.war"/>
	</target>
	
	<target name="clean" description="Cleans this project">
		<delete dir="build" failonerror="false" />
		<delete dir="war/ioschedgwt" failonerror="false" />
	</target>

</project>
